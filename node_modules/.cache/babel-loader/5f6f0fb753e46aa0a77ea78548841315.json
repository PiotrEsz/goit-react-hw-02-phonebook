{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Piotr\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook1\\\\src\\\\components\\\\Form\\\\Form.jsx\";\nimport { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport css from './Form.module.css';\nimport PropTypes from 'prop-types';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  name: '',\n  number: ''\n};\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ...INITIAL_STATE\n    };\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n\n      // console.log(this.props.contacts);\n      // console.log(this.state);\n    };\n    this.reset = () => {\n      this.setState({\n        ...INITIAL_STATE\n      });\n    };\n    this.handleSubmit = e => {\n      //prevent default form behaviour\n      e.preventDefault();\n\n      //destructuring props given from App\n      const {\n        contacts,\n        addContact\n      } = this.props;\n\n      //create new contact object from input based onChange event and values from setState\n      const newContact = {\n        id: uuidv4(),\n        name: this.state.name,\n        number: this.state.number\n      };\n\n      // console.log(newContact);\n\n      //check if contact exist in data\n      let isContact = false;\n      contacts.forEach(el => {\n        if (el.name.toLowerCase() === newContact.name.toLowerCase()) {\n          isContact = true;\n          return;\n        }\n      });\n      if (!isContact) {\n        addContact(newContact);\n      } else {\n        toast.warn('You cannot add the same name twice!', {\n          position: 'top-right',\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'colored'\n        });\n      }\n\n      // console.log({ ...this.state });\n      // this.props.onSubmit({ ...this.state });\n\n      //clear form\n      this.reset();\n    };\n  } //put initial values to state\n  //change of state based on onChange event from input\n  //clear form function\n  //on form Submit function\n  //creating DOM elements\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: css.form,\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: css.formLabel,\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: css.formInput,\n            value: name,\n            onChange: this.handleChange,\n            id: \"name\",\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"number\",\n          className: css.formLabel,\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: css.formInput,\n            value: number,\n            onChange: this.handleChange,\n            type: \"tel\",\n            id: \"number\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: css.btnAdd,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n}\nContactForm.propTypes = {\n  handleChange: PropTypes.func,\n  number: PropTypes.string,\n  name: PropTypes.string\n};\nexport default ContactForm;","map":{"version":3,"names":["Component","v4","uuidv4","toast","css","PropTypes","jsxDEV","_jsxDEV","INITIAL_STATE","name","number","ContactForm","constructor","arguments","state","handleChange","e","value","target","setState","reset","handleSubmit","preventDefault","contacts","addContact","props","newContact","id","isContact","forEach","el","toLowerCase","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","render","children","className","form","onSubmit","htmlFor","formLabel","formInput","onChange","type","pattern","title","required","fileName","_jsxFileName","lineNumber","columnNumber","btnAdd","propTypes","func","string"],"sources":["C:/Users/Piotr/Documents/GitHub/goit-react-hw-02-phonebook1/src/components/Form/Form.jsx"],"sourcesContent":["import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { toast } from 'react-toastify';\r\nimport css from './Form.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  //put initial values to state\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  //change of state based on onChange event from input\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n\r\n    // console.log(this.props.contacts);\r\n    // console.log(this.state);\r\n  };\r\n\r\n  //clear form function\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  //on form Submit function\r\n  handleSubmit = e => {\r\n    //prevent default form behaviour\r\n    e.preventDefault();\r\n\r\n    //destructuring props given from App\r\n    const { contacts, addContact } = this.props;\r\n\r\n    //create new contact object from input based onChange event and values from setState\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n\r\n\r\n    // console.log(newContact);\r\n\r\n    //check if contact exist in data\r\n    let isContact = false;\r\n\r\n    contacts.forEach(el => {\r\n      if (el.name.toLowerCase() === newContact.name.toLowerCase()) {\r\n        isContact = true;\r\n        return;\r\n      }\r\n    });\r\n\r\n    if (!isContact) {\r\n      addContact(newContact);\r\n    } else {\r\n      toast.warn('You cannot add the same name twice!', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n      });\r\n    }\r\n\r\n    // console.log({ ...this.state });\r\n    // this.props.onSubmit({ ...this.state });\r\n\r\n    //clear form\r\n    this.reset();\r\n  };\r\n\r\n  //creating DOM elements\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form className={css.form} onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\" className={css.formLabel}>\r\n            Name\r\n            <input\r\n              className={css.formInput}\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              id=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor=\"number\" className={css.formLabel}>\r\n            Number\r\n            <input\r\n              className={css.formInput}\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              type=\"tel\"\r\n              id=\"number\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={css.btnAdd}>Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleChange: PropTypes.func,\r\n  number: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}