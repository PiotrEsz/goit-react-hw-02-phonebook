{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Piotr\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook1\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport ContactForm from './Form/Form';\nimport ContactList from './Contacts/ContactList';\nimport Filter from './Filter/Filter';\nimport Section from './Section/Section';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.NEW_CONTACT = 'new-contact';\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n    this.addContact = newContact => {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact]\n      }));\n      // console.log(this.state);\n    };\n    this.filterName = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n      // console.log(this.state.filter);\n    };\n    this.filteredNames = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      return contacts.filter(el => el.name.toLowerCase().includes(filter.toLowerCase()));\n    };\n    this.deleteContact = id => {\n      // console.log(id);\n      const index = this.state.contacts.findIndex(el => el.id === id);\n      const array = [...this.state.contacts];\n      if (index !== -1) {\n        array.splice(index, 1);\n        this.setState({\n          contacts: array\n        });\n      }\n      // console.log(this.state.contacts);\n    };\n  }\n  //action on application loading\n  componentDidMount() {\n    const lsContacts = localStorage.getItem(this.NEW_CONTACT);\n    const lsParsed = JSON.parse(lsContacts);\n    if (lsParsed) {\n      this.setState({\n        contacts: lsParsed\n      });\n    }\n  }\n\n  //saving data to localStorage\n  componentDidUpdate(prevProps) {\n    if (prevProps.contacts !== this.state.contacts) {\n      //adding new contact to localStorage\n      localStorage.setItem(this.NEW_CONTACT, JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const filteredNames = this.filteredNames();\n    const {\n      contacts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Phonebook\",\n        children: /*#__PURE__*/_jsxDEV(ContactForm\n        // onSubmit={values => console.log(values)}\n        , {\n          addContact: this.addContact,\n          contacts: contacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Contacts\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          filterState: this.filterName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contactsFiltered: filteredNames,\n          remove: this.deleteContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ContactForm","ContactList","Filter","Section","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","arguments","NEW_CONTACT","state","contacts","filter","addContact","newContact","setState","prevState","filterName","e","currentTarget","value","filteredNames","el","name","toLowerCase","includes","deleteContact","id","index","findIndex","array","splice","componentDidMount","lsContacts","localStorage","getItem","lsParsed","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","children","title","fileName","_jsxFileName","lineNumber","columnNumber","filterState","contactsFiltered","remove"],"sources":["C:/Users/Piotr/Documents/GitHub/goit-react-hw-02-phonebook1/src/components/App.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ContactForm from './Form/Form';\r\nimport ContactList from './Contacts/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport Section from './Section/Section';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n  NEW_CONTACT = 'new-contact';\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  //action on application loading\r\n  componentDidMount() {\r\n    const lsContacts = localStorage.getItem(this.NEW_CONTACT);\r\n    const lsParsed = JSON.parse(lsContacts);\r\n\r\n    if (lsParsed) {\r\n      this.setState({ contacts: lsParsed });\r\n    }\r\n  }\r\n\r\n  //saving data to localStorage\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.contacts !== this.state.contacts) {\r\n      //adding new contact to localStorage\r\n      localStorage.setItem(\r\n        this.NEW_CONTACT,\r\n        JSON.stringify(this.state.contacts)\r\n      );\r\n    }\r\n  }\r\n\r\n  addContact = newContact => {\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, newContact],\r\n    }));\r\n    // console.log(this.state);\r\n  };\r\n\r\n  filterName = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n    // console.log(this.state.filter);\r\n  };\r\n\r\n  filteredNames = () => {\r\n    const { filter, contacts } = this.state;\r\n    return contacts.filter(el =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  deleteContact = id => {\r\n    // console.log(id);\r\n    const index = this.state.contacts.findIndex(el => el.id === id);\r\n    const array = [...this.state.contacts];\r\n    if (index !== -1) {\r\n      array.splice(index, 1);\r\n      this.setState({ contacts: array });\r\n    }\r\n    // console.log(this.state.contacts);\r\n  };\r\n\r\n  render() {\r\n    const filteredNames = this.filteredNames();\r\n    const { contacts } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm\r\n            // onSubmit={values => console.log(values)}\r\n            addContact={this.addContact}\r\n            contacts={contacts}\r\n          />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter filterState={this.filterName} />\r\n          <ContactList\r\n            contactsFiltered={filteredNames}\r\n            remove={this.deleteContact}\r\n          />\r\n          <ToastContainer />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}